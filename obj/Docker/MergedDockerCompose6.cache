name: dockercompose12591001174939200005
services:
  postgresql_database:
    environment:
      POSTGRES_DB: dbmTeste
      POSTGRES_PASSWORD: PostAdm!
      POSTGRES_USER: postgres
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U myuser -d mydb
      interval: 5s
      retries: 5
    image: postgres:latest
    networks:
      app_network: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
        volume: {}
  testdbm:
    build:
      context: E:\Visual Studio Projects\TestDbm
      dockerfile: TestDbm/Dockerfile
    depends_on:
      postgresql_database:
        condition: service_healthy
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionStrings__DefaultConnection: Host=postgresql_database;Port=5432;Database=dbmTeste;Username=postgres;Password=PostAdm!
    image: testdbm:latest
    networks:
      app_network: null
    ports:
      - mode: ingress
        target: 8080
        published: "5000"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "5001"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\renan\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\renan\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  testdbmfront:
    build:
      context: E:\Visual Studio Projects\TestDbm
      dockerfile: TestDbmFront/Dockerfile
    depends_on:
      testdbm:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: testdbmfront:latest
    networks:
      app_network: null
    ports:
      - mode: ingress
        target: 8080
        published: "5002"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "5003"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\renan\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  testdbmunittest:
    build:
      context: E:\Visual Studio Projects\TestDbm
      dockerfile: TestDbmUnitTest/Dockerfile
    image: testdbmunittest:latest
    networks:
      default: null
networks:
  app_network:
    name: dockercompose12591001174939200005_app_network
  default:
    name: dockercompose12591001174939200005_default
volumes:
  postgres_data:
    name: dockercompose12591001174939200005_postgres_data